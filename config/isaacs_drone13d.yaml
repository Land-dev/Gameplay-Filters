environment:
  seed: 0
  timeout: 300
  end_criterion: failure
  dt: 0.02
  obs_type: perfect  # perfect, position_velocity, minimal

agent:
  agent_id: ego
  dyn: Drone13D
  footprint: none
  verbose: false
  gui: false
  gui_imaginary: false
  
  # Drone13D specific parameters
  collisionR: 0.50  # collision radius
  collective_thrust_max: 20.0  # maximum collective thrust
  disturbance_max: 1.0  # maximum disturbance magnitude
  set_mode: avoid  # 'avoid', 'reach', or 'reach_avoid'
  
  # State bounds
  state_max_x: 3.0  # environment boundary X
  state_max_y: 3.0  # environment boundary Y
  state_max_z: 3.0  # environment boundary Z
  state_max_v: 5.0  # maximum velocity
  state_max_w: 5.0  # maximum angular velocity
  state_max_q: 1.0  # maximum quaternion component
  
  # Action space configuration
  action_range: 
    ctrl: &ctrl_range
      - [-20.0, 20.0]   # collective thrust f
      - [-8.0, 8.0]     # wx_cmd
      - [-8.0, 8.0]     # wy_cmd
      - [-4.0, 4.0]     # wz_cmd
    dstb: &dstb_range
      - [-1.0, 1.0]     # fx (wind force x)
      - [-1.0, 1.0]     # fy (wind force y)
      - [-1.0, 1.0]     # fz (wind force z)
      - [-1.0, 1.0]     # tx (wind torque x)
      - [-1.0, 1.0]     # ty (wind torque y)
      - [-1.0, 1.0]     # tz (wind torque z)
  
  # Observation configuration
  obs_dim: 13  # full state dimension
  obsrv_list: &obsrv_list
    ctrl: null
    dstb: null
  reset_criterion: failure

solver:
  device: cuda
  rollout_env_device: cuda
  num_envs: 1
  num_actors: 2
  num_critics: 1
  
  # == hyperparameters of learning ==
  max_steps: 15_000_000
  opt_period: 10_000
  num_updates_per_opt: 1_000
  eval_period: 100_000
  min_steps_b4_opt: 100_000
  warmup_steps: 500_000
  batch_size: 256
  ctrl_update_ratio: 2
  warmup_action_range:
    ctrl: *ctrl_range
    dstb: *dstb_range
  memory_capacity: 1_000_000
  softmax_rationality: 3.0
  
  # == logging ==
  use_wandb: true
  project_name: gameplay-release
  name: isaacs_drone13d
  max_model: 20
  save_top_k:
    ctrl: 10
    dstb: 10
  out_folder: train_result/isaacs_drone13d
  
  eval:   
    b4_learn: true
    metric: safety
    aux_metric: [ep_length, safety]
    num_trajectories: 100
    timeout: 300
    end_criterion: avoid
  obs_dim: 13
  obsrv_list: *obsrv_list
  rollout_end_criterion: avoid
  
  # == hyperparameters of actors and critics ==
  critic_0:
    eval: false
    net_name: central
    lr: 0.0001
    lr_schedule: false
    lr_end: 0.0001
    lr_period: 50000
    lr_decay: 0.9
    gamma: 0.9
    gamma_decay: 0.1
    gamma_end: 0.999
    gamma_period: 2_000_000
    gamma_schedule: true
    tau: 0.01
    mode: avoid
    terminal_type: all  # use min{l_x, g_x} for terminal states/obsrvs.
    opt_type: AdamW
    update_target_period: 2
  
  actor_0:
    eval: false
    net_name: ctrl
    actor_type: max
    learn_alpha: true
    lr: 0.0001
    lr_al: 0.000125
    lr_schedule: false
    lr_al_schedule: false
    alpha: 0.1
    min_alpha: 0.001
    opt_type: AdamW
    update_period: 2
    lr_end: 0.0001
    lr_al_end: 0.00005
    lr_period: 50000
    lr_al_period: 100000
    lr_decay: 0.9    
    lr_al_decay: 0.9
  
  actor_1:
    eval: false
    net_name: dstb
    actor_type: min
    learn_alpha: true
    lr: 0.0001
    lr_al: 0.0000125
    lr_schedule: false
    lr_al_schedule: false
    alpha: 0.1
    min_alpha: 0.001
    opt_type: AdamW
    update_period: 2
    lr_end: 0.0001
    lr_al_end: 0.000005
    lr_period: 50000
    lr_al_period: 100000
    lr_decay: 0.9    
    lr_al_decay: 0.9

arch:
  actor_0:
    mlp_dim:
      - 256
      - 256
      - 256
    activation: Sin
    append_dim: 0
    latent_dim: 0
    obsrv_dim: 13
    action_dim: 4
    action_range: *ctrl_range
    pretrained_path:
  
  actor_1:
    mlp_dim:
      - 256
      - 256
      - 256
    activation: Sin
    append_dim: 0
    latent_dim: 0
    obsrv_dim: 13
    action_dim: 6
    action_range: *dstb_range
    pretrained_path:
  
  critic_0:
    mlp_dim:
      - 128
      - 128
      - 128
    activation: Sin
    append_dim: 0
    latent_dim: 0
    obsrv_dim: 13
    action_dim: 10  # 4 (ctrl) + 6 (dstb)
    pretrained_path:

eval:
  model_type: [highest, highest]  # [ctrl, dstb], highest, safest, worst, manual
  step: [0, 0]  # [ctrl, dstb], the step to use if "manual" is chosen for MODEL_TYPE
  eval_timeout: 1000  # how long do we evaluate in real rollout env
  imaginary_horizon: 300  # the horizon of the imaginary env
